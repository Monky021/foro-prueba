{"version":3,"sources":["types/types.js","reducer/authReducer.js","reducer/foroReducer.js","reducer/uiReducer.js","reducer/rootReducer.js","store/store.js","helpers/fetch.js","accions/authActions.js","hooks/useForm.js","components/auth/LoginScreen.js","routers/PublicRoute.js","routers/PrivateRoute.js","accions/foroActions.js","accions/uiActions.js","components/ui/Navbar.js","components/foro/Respuesta.js","components/foro/Pregunta.js","components/foro/Modal.js","components/foro/ForoScreen.js","components/foro/tematicas/CriptomonedasScreen.js","components/foro/tematicas/DeportesScreen.js","components/foro/tematicas/FotografiaScreen.js","components/foro/tematicas/NodeScreen.js","components/foro/tematicas/ReactScreen.js","components/foro/tematicas/TecnologiaScreen.js","components/foro/tematicas/RandomScreen.js","routers/AppRouter.js","ForoApp.js","index.js"],"names":["types","initialState","checking","preguntas","tematicas","preguntasDe","preguntasFoto","preguntasTec","preguntasCrip","preguntasNode","preguntasReact","preguntasRandom","preguntaActiva","respuestaId","esPregunta","esRespuesta","esEditPregunta","esEditRespuesta","esEliminarPregunta","EsEliminarRespuesta","modalAbierto","rootReducer","combineReducers","ui","state","action","type","auth","payload","foro","map","pre","id","filter","esEliminarRespuesta","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseUrl","fetchSinToken","endpoint","data","method","url","console","log","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","login","usuario","checkingFinish","logout","useForm","useState","form","setForm","reset","handleInputChange","target","name","value","LoginScreen","dispatch","useDispatch","nombre","password","password2","formRegistro","handleRegistroInput","formLogin","handleLoginInput","nombreL","passwordL","className","onSubmit","e","preventDefault","Swal","fire","trim","length","a","resp","json","ok","msg","startRegistro","onChange","htmlFor","dataValues","setItem","uid","startLogin","PublicRoute","isAuthenticated","Component","component","rest","props","to","PrivateRoute","cargaPreguntas","cargaPreguntasDeporte","cargaPreguntasFotografia","cargaPreguntasTecnologia","cargaPreguntasCriptomoneda","cargaPreguntasNode","cargaPreguntasReact","cargaPreguntasRandom","abrirModelPregunta","cerrarModelPregunta","a√±adirPRegunta","pregunta","preguntaId","preguntaActualizada","limpiarModalEliminar","eliminarPregunta","idRespuesta","limpiarIdRespuesta","limpiarEsEliminarRespuesta","cargarTematicasStore","abrirModal","cerrarModal","Navbar","useSelector","useEffect","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","onClick","tema","tematica","clear","Respuesta","respuesta","Pregunta","respuestas","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","ModalForo","modalCerrado","handlerConfirmarEliminacion","getState","resp2","body2","isOpen","onRequestClose","style","closeTimeoutMS","iniciarActualizarPregunta","usuarioId","tematicaId","pregun","hacerPreguntas","idRes","idPre","actualizarRespuesta","hacerRespuesta","placeholder","autoComplete","rows","ForoScreen","pregu","CriptomonedasScreen","DeportesScreen","Deporte","FotografiaScreen","NodeScreen","ReactScreen","TecnologiaScreen","RandomScreen","AppRouter","exact","path","ForoApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9b615c74.chunk.js","sourcesContent":["\r\nexport const types = {\r\n\r\n    authChecking: '[auth] Revisando el estado del inicio de sesion',\r\n    authCheckingFinish: '[auth] Revision del estado del inicio de sesion finalizo',\r\n    authStartLogin: '[auth] inicio del login',\r\n    authLogin: '[auth] login',\r\n    authStartRegistro: '[auth] inicio del Registro',\r\n    authStartTokenRenew: '[auth] obtener nuevo token',\r\n    authlogout: '[auth] salir de la app',\r\n\r\n    preguntasCargar: '[preguntas] Cargar preguntas',\r\n    PreguntasCargadas: '[preguntas] Poner las preguntas en el store',\r\n    PreguntasCargadasDeportes: '[preguntas] Poner las preguntas en el store',\r\n    PreguntasCargadasFotografia: '[preguntas] Poner las preguntas en el store',\r\n    PreguntasCargadasTecnologia: '[preguntas] Poner las preguntas en el store',\r\n    PreguntasCargadasCriptomoneda: '[preguntas] Poner las preguntas en el store',\r\n    PreguntasCargadasNode: '[preguntas] Poner las preguntas en el store',\r\n    PreguntasCargadasReact: '[preguntas] Poner las preguntas en el store',\r\n    PreguntasCargadasRandom: '[preguntas] Poner las preguntas en el store',\r\n\r\n\r\n    hacerPregunta: '[preguntas] postear preguntas' ,\r\n    a√±adirNuevaPregunta: '[Preguntas] a√±ade una nueva pregunta al store',\r\n    preguntaActiva: '[pregunta] poner pregunta activa',\r\n    limparPreguntaActiva: '[pregunta] limpiare la pregunta seleccionada',\r\n    preguntaActualizada: '[pregunta] actualiza la pregunta',\r\n    eliminarPregunta:'[pregunta] eliminar pregunta',\r\n\r\n    idRespuesta:'[respuesta] poner el id de la respuesta en el store ',\r\n    limpiarIdRespuesta: '[respuesta] limpiar el id de la respuesta',\r\n    actualizarRespuesta: '[Respuesta] se actualiza la respuesta en el store',\r\n    eliminarRespuesta: '[respuesta] eliminar la respuesta',\r\n    esEliminarRespuesta: '[respuesta] seleccionar isEliminarRespuesta',\r\n    limpiarEsEliminarRespuesta: '[respuesta] limpiar selecion eliminar la respuesta',\r\n\r\n    modalAbierto: '[ui] el modal se abre',\r\n    modalCerrado: '[ui] el modal se cierra',\r\n    modalAbiertoPreguntas: '[ui] el modal se abre para hacer preguntas',\r\n    modalCerradoPreguntas: '[ui] el modal se cierra y pone en false las preuntas',\r\n    modalAbiertoEditarPregunta: '[ui] el modal se abre para editar pregunta',\r\n    modalAbiertoEliminarPregunta: '[ui] el modal se abre para confirmar la eliminacion de la pregunta',\r\n    modalCerradoEliminarPregunta: '[ui] cambia el estado de eliminar en el store',\r\n\r\n    cargarTematicas: '[tematicas] cargar las tematicas',\r\n    cargarTematicasStore: '[tematica] cargar tematicas store'\r\n\r\n\r\n\r\n\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\n//Estado inicial del reducer\r\nconst initialState = {\r\n    checking: true,\r\n    \r\n}\r\nexport const authReducer = (state= initialState, action) => {\r\n    switch (action.type) {\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking:false\r\n            }\r\n            \r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                checking:false\r\n            }\r\n\r\n        case types.authlogout:\r\n            return {\r\n                checking: false\r\n            }\r\n           \r\n            \r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    preguntas: [],\r\n    tematicas: [],\r\n    preguntasDe:[],\r\n    preguntasFoto:[],\r\n    preguntasTec:[],\r\n    preguntasCrip:[],\r\n    preguntasNode:[],\r\n    preguntasReact:[],\r\n    preguntasRandom:[],\r\n    preguntaActiva: null,\r\n    respuestaId:null,\r\n    esPregunta:false,\r\n    esRespuesta: false,\r\n    esEditPregunta: false,\r\n    esEditRespuesta:false,\r\n    esEliminarPregunta:false,\r\n    EsEliminarRespuesta:false,\r\n}\r\n\r\nexport const foroReducer = (state= initialState, action) => {\r\n    switch (action.type) {\r\n        case types.PreguntasCargadas:\r\n            return {\r\n                ...state,\r\n                preguntas: [...action.payload]\r\n            }\r\n\r\n        case types.PreguntasCargadasDeportes:\r\n            return{\r\n                ...state,\r\n                preguntasDe:[...action.payload]\r\n            }\r\n\r\n        case types.PreguntasCargadasFotografia:\r\n            return{\r\n                ...state,\r\n                preguntasFoto:[...action.payload]\r\n            }\r\n            \r\n        case types.modalAbiertoPreguntas:\r\n            return {\r\n                ...state,\r\n                esPregunta:true\r\n            }\r\n        case types.modalCerradoPreguntas:\r\n            return {\r\n                ...state,\r\n                esPregunta:false\r\n            }\r\n        case types.a√±adirNuevaPregunta:\r\n            return{\r\n                ...state,\r\n                preguntas:[\r\n                    ...state.preguntas,\r\n                    action.payload\r\n                ]\r\n            }\r\n        case types.preguntaActiva:\r\n            return {\r\n                ...state,\r\n                preguntaActiva: action.payload\r\n            }\r\n\r\n        case types.limparPreguntaActiva:\r\n            return {\r\n                ...state,\r\n                preguntaActiva: null\r\n            }\r\n        case types.modalAbiertoEditarPregunta:\r\n            return {\r\n                ...state\r\n            }\r\n        case types.modalAbiertoEliminarPregunta:\r\n            return{\r\n                ...state,\r\n                esEliminarPregunta: true\r\n            }\r\n        case types.modalCerradoEliminarPregunta:\r\n            return {\r\n                ...state,\r\n                esEliminarPregunta: false\r\n            }\r\n        case types.preguntaActualizada:\r\n            return {\r\n                ...state,\r\n                preguntas: state.preguntas.map(\r\n                    pre => (pre.id===action.payload.id) ? action.payload: pre\r\n                )\r\n            }\r\n        case types.eliminarPregunta:\r\n            return {\r\n                ...state,\r\n                preguntas: state.preguntas.filter(\r\n                    pre => (pre.id!==state.preguntaActiva)\r\n                ),\r\n                preguntaActiva:null\r\n            }\r\n        case types.idRespuesta:\r\n            return {\r\n                ...state,\r\n                respuestaId: action.payload\r\n            }\r\n        case types.limpiarIdRespuesta:\r\n            return {\r\n                ...state,\r\n                respuestaId: null\r\n            }\r\n        case types.esEliminarRespuesta:\r\n            return{\r\n                ...state,\r\n                esEliminarRespuesta:true\r\n            }\r\n        case types.limpiarEsEliminarRespuesta:\r\n            return {\r\n                ...state,\r\n                esEliminarRespuesta:false\r\n            }\r\n        case types.cargarTematicasStore:\r\n            return {\r\n                ...state,\r\n                tematicas: [...action.payload]\r\n            }\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modalAbierto: false\r\n}\r\n\r\nexport const uiReducer = (state=initialState, action)=>{\r\n\r\n    switch (action.type) {\r\n        case types.modalAbierto:\r\n            return {\r\n                ...state,\r\n                modalAbierto:true\r\n            }\r\n\r\n        case types.modalCerrado:\r\n            return {\r\n                ...state,\r\n                modalAbierto:false\r\n            }\r\n        \r\n            \r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","import {combineReducers} from 'redux';\r\nimport { authReducer } from './authReducer';\r\nimport { foroReducer } from './foroReducer';\r\nimport {uiReducer} from './uiReducer'\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui:uiReducer,\r\n    auth: authReducer,\r\n    foro: foroReducer\r\n})","import { applyMiddleware, compose, createStore } from \"redux\";\r\nimport thunk from 'redux-thunk';\r\nimport { rootReducer } from \"../reducer/rootReducer\";\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n);","const baseUrl = 'http://localhost:4040/api/foro';\r\n\r\n//Se encarga de formar el url junto al tipo de posteo y envia la data correspondiente sim solucitar el token\r\nexport const fetchSinToken = ( endpoint, data, method = 'GET') => {\r\n    const url = `${baseUrl}/${endpoint}`;\r\n    console.log(url);\r\n    if(method === 'GET'){\r\n        return fetch(url);\r\n    }else {\r\n        return fetch(url,{\r\n            method,\r\n            headers:{\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n\r\n    }\r\n\r\n}\r\n\r\n//Se encarga de hacer peticiones teniendo en cuenta el token \r\nexport const fetchConToken = ( endpoint, data, method = 'GET') => {\r\n    const url = `${baseUrl}/${endpoint}`;\r\n    const token = localStorage.getItem('token') || '';\r\n    \r\n    if(method === 'GET'){\r\n        return fetch(url,{\r\n            method,\r\n            headers:{\r\n                'x-token':token\r\n            }\r\n        });\r\n    }else {\r\n        return fetch(url,{\r\n            method,\r\n            headers:{\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n\r\n    }\r\n\r\n}","\r\nimport Swal from 'sweetalert2';\r\nimport {fetchConToken, fetchSinToken} from '../helpers/fetch';\r\nimport {types} from '../types/types'\r\n\r\n\r\n// Se hace el posteo para poder iniciar sesion con el nombre y la contrase√±a\r\nexport const startLogin = (nombre,password) => {\r\n\r\n    return async(dispatch) => {\r\n        // se hace la peticion sin token para iniciar sesion en el backend \r\n        const resp = await fetchSinToken('auth/login', {nombre, password}, 'POST');\r\n\r\n        const body = await resp.json();\r\n        //si la respuesta es true guarda el token y hace el logueo manteniendo la data en el store de redux\r\n        if(resp.ok){\r\n            const {data, token} = body;\r\n            const {dataValues} = data;\r\n            localStorage.setItem('token', token);\r\n            dispatch(login({uid: dataValues.id, nombre: dataValues.nombre}))\r\n            Swal.fire('Bienvenido','','success')\r\n        }else {\r\n            Swal.fire('Error', body.msg, 'error')\r\n        }\r\n    }\r\n}\r\n\r\n//accion que guarda el usuario en el store\r\nconst login = (usuario) => ({\r\n    type: types.authLogin,\r\n    payload: usuario\r\n})\r\n\r\n\r\n//Accion que hace el posteo para realizar el registro del nuevo usuario\r\nexport const startRegistro = (nombre, password) => {\r\n    return async(dispatch)=> {\r\n        //se hace la peticion sin token para el registro\r\n        const resp = await fetchSinToken('usuario', {nombre, password}, 'POST');\r\n        const body = await resp.json();\r\n        \r\n        //si la respuesta es true saldra una alerta de confirmado pero no iniciara sesion\r\n        if(resp.ok){\r\n            return Swal.fire('Buen trabajo', 'Tu cuenta fue creada, solo te falta iniciar sesion', 'success')\r\n        }else{\r\n            return Swal.fire('Ups...', body.msg, 'error');\r\n        }\r\n    }\r\n}\r\n\r\n//Accion que incia el chequeo del usuario\r\nexport const startChecking = () =>{\r\n    return async(dispatch)=>{\r\n        //se hace la peticion con el token para verificar si es un usuario valido y regresa un nuevo token\r\n        const resp = await fetchConToken('auth/renew' );\r\n        const body = await resp.json();\r\n        \r\n        //si la respuesta es true guarda el token nuevo en el localStorage y mantiene la sesion activa\r\n        if(resp.ok){\r\n            \r\n            localStorage.setItem('token', body.token);\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                nombre: body.nombre\r\n            }));\r\n\r\n        }else {\r\n            dispatch(checkingFinish());\r\n        }\r\n    }\r\n}\r\n\r\n\r\n//finaliza el chequeo del usuario\r\nconst checkingFinish = () => ({\r\n    type: types.authCheckingFinish\r\n})\r\n\r\n\r\n//Realizar el logout\r\nexport const inicioSalirForo = () => {\r\n    return (dispatch)=> {\r\n        localStorage.clear();\r\n\r\n        dispatch(logout())\r\n        Swal.fire(':)', 'Esperamos volverlo a ver pronto', 'info')\r\n    }\r\n}\r\n\r\n//logout\r\nconst logout = () =>({type:types.authlogout})","import { useState } from \"react\"\r\n\r\n//Custom hook para capturar los datos del formulario\r\nexport const useForm = (initialState= {}) => {\r\n\r\n    const [form, setForm] = useState(initialState)\r\n\r\n    const reset = () => {\r\n        setForm(initialState);\r\n    }\r\n\r\n    const handleInputChange = ({target}) => {\r\n        setForm({\r\n            ...form,\r\n            [target.name]: target.value\r\n        })\r\n    } \r\n    return [form, handleInputChange, reset]\r\n\r\n\r\n}","import React from 'react'\r\nimport {useDispatch} from 'react-redux';\r\nimport Swal from 'sweetalert2'\r\nimport { startLogin, startRegistro } from '../../accions/authActions';\r\nimport { useForm } from '../../hooks/useForm'\r\nimport './login.css'\r\nexport const LoginScreen = () => {\r\n\r\n    //Estado incial del formulario de registro\r\n    const initialFormRegistro = {\r\n        nombre: '',\r\n        password: '',\r\n        password2:''\r\n    }\r\n    //estado inicial del formulario de login\r\n    const initialFormLogin = {\r\n        nombre: '',\r\n        password: '',\r\n        \r\n    }\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [formRegistro, handleRegistroInput] = useForm(initialFormRegistro);\r\n    const [formLogin, handleLoginInput] = useForm(initialFormLogin);\r\n\r\n\r\n    const { nombre, password, password2 } = formRegistro;\r\n    const { nombre:nombreL, password:passwordL} = formLogin;\r\n\r\n    //funcion para capturar los eventos del formulario de registro, se validan los datos y se despachan\r\n    const handleSubmirRegistro = (e) => {\r\n        e.preventDefault();\r\n\r\n        \r\n        if(nombre === ''){\r\n            return Swal.fire('Error', 'El nickname es obligatorio', 'error')\r\n\r\n        }\r\n        if(nombre.trim().length <3){\r\n            return Swal.fire('Error', 'El nickname debe tener mas de 2 caracteres', 'error')\r\n\r\n        }\r\n        if(password !== password2){\r\n            return Swal.fire('Error', 'Las contrase√±as deben de coincidir', 'error')\r\n        }\r\n\r\n        dispatch(startRegistro(nombre, password));\r\n    }\r\n\r\n    //funcion para capturar los eventos del formulario de login, se validan los datos y se despachan\r\n    const handleSubmirLogin = (e) => {\r\n        e.preventDefault();\r\n        if(nombreL === '' ){\r\n            return Swal.fire('Error', 'El nombre es obligatorio', 'error')\r\n\r\n        }\r\n        if(passwordL.trim().length === 0){\r\n            return Swal.fire('Error', 'la contrase√±a es obligatoria', 'error')\r\n        }\r\n\r\n        dispatch(startLogin(nombreL, passwordL));\r\n    }\r\n    return (\r\n\r\n        <div>\r\n            <div className=\"container mt-60\">\r\n\r\n                <form onSubmit={handleSubmirRegistro}>\r\n                    <div className=\"form-group\">\r\n                        <label >Registrar su Nickname</label>\r\n                        <input type=\"text\" className=\"form-control\" name=\"nombre\" value={nombre} onChange={handleRegistroInput} />\r\n                        <small id=\"emailHelp\" className=\"form-text text-muted\">Su nickname debe ser unico en el foro para poder ingresar</small>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"exampleInputPassword1\">Contrase√±a</label>\r\n                        <input type=\"password\" className=\"form-control\" name=\"password\" value={password} onChange={handleRegistroInput}  />\r\n                        <small id=\"emailHelp\" className=\"form-text text-muted\">La contrase√±a debe ser minimo de 6 digitos</small>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"exampleInputPassword1\">Confirmar contrase√±a</label>\r\n                        <input type=\"password\" className=\"form-control\" name=\"password2\" value={password2} onChange={handleRegistroInput} />\r\n                    </div>\r\n\r\n                    <button type=\"submit\" className=\"btn btn-primary\">Registrar</button>\r\n                </form>\r\n            </div>\r\n\r\n            <hr />\r\n            <div className=\"container mt-60\">\r\n\r\n                <form onSubmit={handleSubmirLogin}>\r\n                    <div className=\"form-group\">\r\n                        <label >Nickname</label>\r\n                        <input type=\"text\" className=\"form-control\" name=\"nombre\" value={nombreL} onChange={handleLoginInput} />\r\n                        <small id=\"emailHelp\" className=\"form-text text-muted\">Su nickname debe ser unico en el foro para poder ingresar</small>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"exampleInputPassword1\">Contrase√±a</label>\r\n                        <input type=\"password\" className=\"form-control\" name=\"password\" value={passwordL} onChange={handleLoginInput}  />\r\n                        <small id=\"emailHelp\" className=\"form-text text-muted\">La contrase√±a debe ser minimo de 6 digitos</small>\r\n                    </div>\r\n                    \r\n\r\n                    <button type=\"submit\" className=\"btn btn-primary\">Entrar al foro</button>\r\n                </form>\r\n            </div>\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Redirect to=\"/\" /> )\n                    : ( <Component { ...props } /> )\n            )}\n        \n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/login\" /> )\n            )}\n        \n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import Swal from \"sweetalert2\";\r\nimport { fetchConToken } from \"../helpers/fetch\"\r\nimport { types } from \"../types/types\";\r\n\r\n//Accion para hacer la peticion al backend de las preguntas\r\nexport const iniciarCargaPreguntas = () => {\r\n\r\n    return async (dispatch) => {\r\n        try {\r\n            //se valida el token y se hace el get al endpoint para obtener las preguntas\r\n            const resp = await fetchConToken('pregunta');\r\n            const body = await resp.json();\r\n            const { preguntas } = body;\r\n            \r\n            //si la respuesta es true se hace una carga de las preguntas al store\r\n            if (resp.ok) {\r\n                dispatch(cargaPreguntas(preguntas))\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n}\r\n\r\n//Accion para hacer la peticion al backen de las preguntas con tematica de deporte\r\nexport const iniciarCargaPreguntasDeporte = () => {\r\n\r\n    return async (dispatch) => {\r\n        try {\r\n            //se valida el token y se hace el get al endpoint para obtener las preguntas\r\n            const resp = await fetchConToken('pregunta?tematica=1');\r\n            const body = await resp.json();\r\n            const { preguntas:Deporte } = body;\r\n            \r\n            //si la respuesta es true se hace una carga de las preguntas al store\r\n            if (resp.ok) {\r\n                dispatch(cargaPreguntasDeporte(Deporte))\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n}\r\n//Accion para hacer la peticion al backen de las preguntas con tematica de deporte\r\nexport const iniciarCargaPreguntasFotografia = () => {\r\n\r\n    return async (dispatch) => {\r\n        try {\r\n            //se valida el token y se hace el get al endpoint para obtener las preguntas\r\n            const resp = await fetchConToken('pregunta?tematica=2');\r\n            const body = await resp.json();\r\n            const { preguntas } = body;\r\n            \r\n            //si la respuesta es true se hace una carga de las preguntas al store\r\n            if (resp.ok) {\r\n                dispatch(cargaPreguntasFotografia(preguntas))\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n}\r\n//Accion para hacer la peticion al backen de las preguntas con tematica de deporte\r\nexport const iniciarCargaPreguntasTecnologia = () => {\r\n\r\n    return async (dispatch) => {\r\n        try {\r\n            //se valida el token y se hace el get al endpoint para obtener las preguntas\r\n            const resp = await fetchConToken('pregunta?tematica=3');\r\n            const body = await resp.json();\r\n            const { preguntas } = body;\r\n            \r\n            //si la respuesta es true se hace una carga de las preguntas al store\r\n            if (resp.ok) {\r\n                dispatch(cargaPreguntasTecnologia(preguntas))\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n}\r\n//Accion para hacer la peticion al backen de las preguntas con tematica de deporte\r\nexport const iniciarCargaPreguntasCriptomoneda = () => {\r\n\r\n    return async (dispatch) => {\r\n        try {\r\n            //se valida el token y se hace el get al endpoint para obtener las preguntas\r\n            const resp = await fetchConToken('pregunta?tematica=4');\r\n            const body = await resp.json();\r\n            const { preguntas } = body;\r\n            \r\n            //si la respuesta es true se hace una carga de las preguntas al store\r\n            if (resp.ok) {\r\n                dispatch(cargaPreguntasCriptomoneda(preguntas))\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n}\r\n//Accion para hacer la peticion al backen de las preguntas con tematica de deporte\r\nexport const iniciarCargaPreguntasNode = () => {\r\n\r\n    return async (dispatch) => {\r\n        try {\r\n            //se valida el token y se hace el get al endpoint para obtener las preguntas\r\n            const resp = await fetchConToken('pregunta?tematica=5');\r\n            const body = await resp.json();\r\n            const { preguntas } = body;\r\n            \r\n            //si la respuesta es true se hace una carga de las preguntas al store\r\n            if (resp.ok) {\r\n                dispatch(cargaPreguntasNode(preguntas))\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n}\r\n//Accion para hacer la peticion al backen de las preguntas con tematica de deporte\r\nexport const iniciarCargaPreguntasReact = () => {\r\n\r\n    return async (dispatch) => {\r\n        try {\r\n            //se valida el token y se hace el get al endpoint para obtener las preguntas\r\n            const resp = await fetchConToken('pregunta?tematica=6');\r\n            const body = await resp.json();\r\n            const { preguntas } = body;\r\n            \r\n            //si la respuesta es true se hace una carga de las preguntas al store\r\n            if (resp.ok) {\r\n                dispatch(cargaPreguntasReact(preguntas))\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n}\r\n//Accion para hacer la peticion al backen de las preguntas con tematica de deporte\r\nexport const iniciarCargaPreguntasRandom = () => {\r\n\r\n    return async (dispatch) => {\r\n        try {\r\n            //se valida el token y se hace el get al endpoint para obtener las preguntas\r\n            const resp = await fetchConToken('pregunta?tematica=9');\r\n            const body = await resp.json();\r\n            const { preguntas } = body;\r\n            \r\n            //si la respuesta es true se hace una carga de las preguntas al store\r\n            if (resp.ok) {\r\n                dispatch(cargaPreguntasRandom(preguntas))\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n}\r\n//accion para cargar las preguntas al store\r\nconst cargaPreguntas = (preguntas) => ({\r\n    type: types.PreguntasCargadas,\r\n    payload: preguntas\r\n})\r\nconst cargaPreguntasDeporte = (preguntas) => ({\r\n    type: types.PreguntasCargadasDeportes,\r\n    payload: preguntas\r\n})\r\nconst cargaPreguntasFotografia = (preguntas) => ({\r\n    type: types.PreguntasCargadasFotografia,\r\n    payload: preguntas\r\n})\r\nconst cargaPreguntasTecnologia = (preguntas) => ({\r\n    type: types.PreguntasCargadasTecnologia,\r\n    payload: preguntas\r\n})\r\nconst cargaPreguntasCriptomoneda = (preguntas) => ({\r\n    type: types.PreguntasCargadasCriptomoneda,\r\n    payload: preguntas\r\n})\r\nconst cargaPreguntasNode = (preguntas) => ({\r\n    type: types.PreguntasCargadasNode,\r\n    payload: preguntas\r\n})\r\nconst cargaPreguntasReact = (preguntas) => ({\r\n    type: types.PreguntasCargadasReact,\r\n    payload: preguntas\r\n})\r\nconst cargaPreguntasRandom = (preguntas) => ({\r\n    type: types.PreguntasCargadasRandom,\r\n    payload: preguntas\r\n})\r\n\r\nexport const abrirModelPregunta = () => ({ type: types.modalAbiertoPreguntas })\r\nexport const cerrarModelPregunta = () => ({ type: types.modalCerradoPreguntas })\r\n\r\n\r\n//A√±ade la nueva pregunta al store\r\nconst a√±adirPRegunta = (pregunta) => ({\r\n    type: types.a√±adirNuevaPregunta,\r\n    payload: pregunta\r\n})\r\n\r\n//accion para crear las preguntas\r\nexport const hacerPreguntas = (pregunta, usuarioId, tematicaId) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const resp = await fetchConToken('pregunta', { pregunta, usuarioId, tematicaId }, 'POST');\r\n            const body = await resp.json();\r\n            const { pregunta: pregun } = body;\r\n            \r\n            if (resp.ok) {\r\n                dispatch(a√±adirPRegunta(pregun))\r\n                Swal.fire('Listo', 'La pregunta se creo satisfactoriamente', 'success')\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n// Selecciona el id de la pregunta en el store\r\nexport const preguntaActiva = (preguntaId) => ({\r\n    type: types.preguntaActiva,\r\n    payload: preguntaId\r\n})\r\n//limpia el id de la pregunta de la store\r\nexport const limpiarPreguntaActiva = () => ({type: types.limparPreguntaActiva})\r\n\r\n\r\n\r\n//Actualizar pregunta\r\nconst preguntaActualizada = (pregunta) =>({\r\n    type: types.preguntaActualizada,\r\n    payload:pregunta\r\n}) \r\n\r\n\r\nexport const iniciarActualizarPregunta = (id, pregunta) => {\r\n    return async(dispatch)=> {\r\n\r\n        try {\r\n\r\n            const resp = await fetchConToken(`pregunta/${id}`, {pregunta}, 'PUT')\r\n            const body = await resp.json();\r\n            \r\n            if (resp.ok) {\r\n                dispatch(preguntaActualizada(body));\r\n                Swal.fire('Listo', 'La pregunta se actualizo satisfactoriamente', 'success')\r\n\r\n                \r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport const abrirModalEditarPegunta = () =>({\r\n    type:types.modalAbiertoEditarPregunta\r\n})\r\n\r\n\r\n//Eliminar pregunta\r\n\r\nexport const abrirModalEliminar = () => ({\r\n    type: types.modalAbiertoEliminarPregunta\r\n})\r\n\r\nexport const limpiarModalEliminar = () => ({\r\n    type: types.modalCerradoEliminarPregunta\r\n})\r\n\r\nexport const iniciarEliminarPregunta = () => {\r\n    return async(dispatch, getState)=> {\r\n        const id = getState().foro.preguntaActiva;\r\n        try {\r\n            const resp = await fetchConToken(`pregunta/${id}`, {} ,'DELETE');\r\n            \r\n            const {msg} = resp.json();\r\n            if(resp.ok){\r\n                dispatch(eliminarPregunta())\r\n                Swal.fire('Listo', msg, 'success');\r\n            }\r\n        } catch (error) {\r\n\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst eliminarPregunta = () => ({\r\n    type: types.eliminarPregunta\r\n})\r\n\r\n\r\n\r\n\r\n\r\n\r\n//Crear respuesta\r\n\r\nexport const hacerRespuesta = (respuesta, preguntaId) => {\r\n\r\n    return async(dispatch)=> {\r\n        try {\r\n            const resp = await fetchConToken('respuesta', {respuesta, preguntaId}, 'POST');\r\n            \r\n            if(resp.ok){\r\n                //cargar preguntas\r\n                const resp2 = await fetchConToken('pregunta');\r\n                const body2 = await resp2.json();\r\n                const { preguntas } = body2;\r\n                dispatch(cargaPreguntas(preguntas))\r\n                Swal.fire('Listo', 'La respuesta se creo satisfactoriamente', 'success');\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n//Seleccionar el id de la respuesta en el store\r\nexport const idRespuesta = (id) => ({\r\n    type: types.idRespuesta,\r\n    payload: id\r\n})\r\n//limpiar el id de la respuesta del store\r\nexport const limpiarIdRespuesta = () => ({\r\n    type: types.limpiarIdRespuesta\r\n})\r\n\r\n\r\n//Actualizar respuesta \r\n\r\n export const actualizarRespuesta = (respuesta, idRes, idPre) => {\r\n     return async(dispatch)=> {\r\n         try {\r\n             const resp = await fetchConToken(`respuesta/${idRes}`, {respuesta, idPre}, 'PUT');\r\n             \r\n             if(resp.ok){\r\n                const resp2 = await fetchConToken('pregunta');\r\n                const body2 = await resp2.json();\r\n                const { preguntas } = body2;\r\n                dispatch(cargaPreguntas(preguntas))\r\n                Swal.fire('Listo', 'La respuesta se actualizo satisfactoriamente', 'success');\r\n\r\n            }\r\n         } catch (error) {\r\n             \r\n         }\r\n     }\r\n }\r\n\r\n\r\n//selecionar esEliminar respuesta\r\nexport const esEliminarRespuesta = ()=> ({\r\n    type:types.esEliminarRespuesta\r\n})\r\nexport const limpiarEsEliminarRespuesta = ()=> ({\r\n    type:types.limpiarEsEliminarRespuesta\r\n})\r\n\r\n//Eliminar respuesta de la base de datos\r\nexport const eliminarRespuesta = (id) =>{\r\n\r\n    return async(dispatch) => {\r\n        \r\n        try {\r\n            const resp = await fetchConToken(`respuesta/${id}`, {}, 'DELETE');\r\n            const {msg} = await resp.json();\r\n            if (resp.ok) {\r\n                const resp2 = await fetchConToken('pregunta');\r\n                const body2 = await resp2.json();\r\n                const { preguntas } = body2;\r\n                dispatch(cargaPreguntas(preguntas))\r\n                Swal.fire('Listo', msg, 'success');\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n//Cargar tematicas \r\nexport const cargarTematicas = () => {\r\n    return async (dispatch)=> {\r\n\r\n        const resp = await fetchConToken('tematica');\r\n        const body = await resp.json();\r\n        console.log(body);\r\n        if (resp.ok) {\r\n            dispatch(cargarTematicasStore(body));\r\n        }\r\n\r\n    }\r\n}\r\nconst cargarTematicasStore = (tematicas) => ({\r\n    type: types.cargarTematicasStore,\r\n    payload: tematicas\r\n})","import { types } from \"../types/types\"\r\n\r\n\r\n\r\n//Accion para abrir el modal\r\nexport const abrirModal = () => ({\r\n    type: types.modalAbierto\r\n})\r\n//accion para cerrar el modal\r\nexport const cerrarModal = () => ({\r\n    type: types.modalCerrado\r\n})","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { inicioSalirForo } from '../../accions/authActions';\r\nimport { abrirModelPregunta, cargarTematicas } from '../../accions/foroActions';\r\nimport { abrirModal } from '../../accions/uiActions';\r\nimport '../foro/css.css'\r\nexport const Navbar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {tematicas} = useSelector(state => state.foro)\r\n    useEffect(() => {\r\n        dispatch((cargarTematicas()))\r\n    }, [dispatch])\r\n    // abre el modal y crea la pregunta nueva\r\n    const handleOnClickPregunta = () => {\r\n        \r\n        \r\n        \r\n        dispatch(abrirModal())\r\n        dispatch(abrirModelPregunta())\r\n    }\r\n    const habdelonClickSalir = () => {\r\n        dispatch(inicioSalirForo())\r\n    }\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light \">\r\n            <a className=\"navbar-brand\" href=\"/\">NuestroForo</a>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n\r\n                <div className=\"navbar-nav \">\r\n                    \r\n                    <button className=\"btn btn-primary\" onClick={handleOnClickPregunta}> Hacer una pregunta</button>\r\n                    \r\n                </div>\r\n                {\r\n                    <div className=\"navbar-nav\">\r\n                        {tematicas.map(tema =>(\r\n                            <a key={tema.id} className=\"btn btn-outline-primary margin-all\" href={`/${tema.tematica}`}> {tema.tematica} </a>\r\n                        ))}\r\n                    </div>\r\n                }\r\n                <div className=\"navbar-nav ml-auto\">\r\n\r\n                    <button className=\" btn btn-outline-danger\" onClick={habdelonClickSalir} > Salir </button>\r\n                    \r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { esEliminarRespuesta, idRespuesta } from '../../accions/foroActions';\r\nimport { abrirModal } from '../../accions/uiActions';\r\nimport './css.css';\r\n\r\nexport const Respuesta = ({id, respuesta}) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handlerOnClickEditarRespuesta = () => {\r\n        dispatch(abrirModal())\r\n\r\n        dispatch(idRespuesta(id))\r\n        \r\n    }\r\n    const handlerOnClickEliminarRespuesta = () => {\r\n        dispatch(idRespuesta(id))\r\n        dispatch(esEliminarRespuesta())\r\n        dispatch(abrirModal())\r\n    }\r\n\r\n    return (\r\n        <div className=\"card\" >\r\n            <div className=\"card-body\">\r\n                \r\n                <p className=\"card-text\">{respuesta}</p>\r\n                <button className=\"btn btn-primary margin-all\"  onClick={handlerOnClickEditarRespuesta}> Editar respuesta </button>\r\n                <button className=\"btn btn-outline-danger margin-all\"  onClick={handlerOnClickEliminarRespuesta}> Eliminar respuesta </button>\r\n\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { abrirModalEliminar, abrirModelPregunta, preguntaActiva } from '../../accions/foroActions';\r\nimport {Respuesta} from './Respuesta'\r\nimport { abrirModal } from '../../accions/uiActions';\r\nimport './css.css';\r\n\r\nexport const Pregunta = ({id, pregunta = '', respuestas=[]}) => {\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const handlerOnClickRespuesta = () => {\r\n        dispatch(abrirModal())\r\n        dispatch(preguntaActiva(id))\r\n\r\n        \r\n    }\r\n    const handlerOnClickEditarPregunta = () => {\r\n\r\n        dispatch(abrirModal())\r\n        dispatch(abrirModelPregunta())\r\n        dispatch(preguntaActiva(id))\r\n        \r\n    }\r\n    const handlerOnClickEliminarPregunta = () => {\r\n        dispatch(abrirModal())\r\n        dispatch(abrirModalEliminar())\r\n        dispatch(preguntaActiva(id))\r\n\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className=\"container\">\r\n            \r\n            <div className=\"card\" >\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">{pregunta}</h5>\r\n                    <h6 className=\"card-subtitle mb-2 text-muted\">Respuestas</h6>\r\n                    {\r\n                        respuestas.map((resp) =>( \r\n                        \r\n                            <Respuesta\r\n                                key={resp.id}\r\n                                {...resp}\r\n                            />    \r\n                        )\r\n                            \r\n\r\n                        \r\n                            \r\n                        )\r\n                        }\r\n                    {/* <a href=\"#\" className=\"card-link\">Another link</a> */}\r\n                    \r\n                    <button className=\"btn btn-primary margin-all\" onClick={handlerOnClickRespuesta}> Responder </button>\r\n                    <button className=\"btn btn-primary margin-all\" onClick={handlerOnClickEditarPregunta}> Editar pregunta </button>\r\n                    <button className=\"btn btn-outline-danger margin-all\" onClick={handlerOnClickEliminarPregunta}> Eliminar pregunta </button>\r\n\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","\r\nimport Modal from 'react-modal';\r\n\r\nimport { useForm } from '../../hooks/useForm';\r\nimport Swal from 'sweetalert2';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { cerrarModal } from '../../accions/uiActions';\r\nimport { actualizarRespuesta, cerrarModelPregunta, eliminarRespuesta, hacerPreguntas, hacerRespuesta, iniciarActualizarPregunta, iniciarEliminarPregunta, limpiarEsEliminarRespuesta, limpiarIdRespuesta, limpiarModalEliminar, limpiarPreguntaActiva } from '../../accions/foroActions';\r\n//import { Tematica } from './Tematica';\r\nimport './css.css';\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n    },\r\n};\r\n\r\nModal.setAppElement('#root');\r\n\r\n\r\n\r\n\r\n\r\nexport const ModalForo = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { modalAbierto } = useSelector(state => state.ui);\r\n    const {\r\n        esPregunta,\r\n        preguntaActiva,\r\n        esEliminarPregunta,\r\n        respuestaId,\r\n        esEliminarRespuesta,\r\n        tematicas\r\n    } = useSelector(state => state.foro);\r\n    const { uid } = useSelector(state => state.auth);\r\n\r\n\r\n    const [form, handleInputChange, reset] = useForm({\r\n        pregunta: '',\r\n        respuesta: '',\r\n        tematica:1,\r\n    });\r\n\r\n    const { pregunta, respuesta, tematica } = form;\r\n\r\n    const handlerSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (esPregunta) {\r\n            if (pregunta === '') {\r\n                return Swal.fire('Ups...', 'La pregunta es obligatoria', 'error')\r\n\r\n            }\r\n            if (!!preguntaActiva) {\r\n                dispatch(iniciarActualizarPregunta(preguntaActiva, pregunta))\r\n            } else {\r\n                console.log(tematica);\r\n                dispatch(hacerPreguntas(pregunta, uid, tematica));\r\n                reset();\r\n                dispatch(cerrarModal());\r\n                dispatch(cerrarModelPregunta());\r\n\r\n            }\r\n\r\n        } else {\r\n            if (respuesta === '') {\r\n\r\n                return Swal.fire('Ups...', 'La respuesta es obligatoria', 'error')\r\n            }\r\n            if (!!respuestaId) {\r\n                dispatch(actualizarRespuesta(respuesta, respuestaId, preguntaActiva))\r\n            } else {\r\n\r\n\r\n                dispatch(hacerRespuesta(respuesta, preguntaActiva));\r\n            }\r\n        }\r\n        reset();\r\n        dispatch(cerrarModal());\r\n        dispatch(limpiarIdRespuesta())\r\n\r\n    }\r\n\r\n\r\n\r\n    const modalCerrado = () => {\r\n        reset();\r\n        dispatch(cerrarModal());\r\n        dispatch(limpiarEsEliminarRespuesta())\r\n        dispatch(cerrarModelPregunta());\r\n        dispatch(limpiarPreguntaActiva());\r\n        dispatch(limpiarModalEliminar());\r\n        dispatch(limpiarIdRespuesta());\r\n    }\r\n    // const cancelarPosteo = () => {\r\n    //     reset();\r\n    //     dispatch(cerrarModal());\r\n    //     dispatch(limpiarEsEliminarRespuesta())\r\n    //     dispatch(cerrarModelPregunta());\r\n    //     dispatch(limpiarPreguntaActiva());\r\n    //     dispatch(limpiarModalEliminar());\r\n    //     dispatch(limpiarIdRespuesta());\r\n    // }\r\n    const handlerConfirmarEliminacion = () => {\r\n        if (esEliminarPregunta) {\r\n            dispatch(iniciarEliminarPregunta());\r\n            dispatch(cerrarModal());\r\n            dispatch(limpiarModalEliminar());\r\n\r\n        }\r\n        if (esEliminarRespuesta) {\r\n            dispatch(eliminarRespuesta(respuestaId));\r\n            dispatch(cerrarModal());\r\n            dispatch(limpiarEsEliminarRespuesta());\r\n\r\n\r\n        }\r\n\r\n\r\n    }\r\n    return (\r\n        <div>\r\n            <Modal\r\n                isOpen={modalAbierto}\r\n                // onAfterOpen={afterOpenModal}\r\n                onRequestClose={modalCerrado}\r\n                style={customStyles}\r\n                closeTimeoutMS={300}\r\n\r\n            >\r\n                {\r\n                    esEliminarPregunta\r\n                        ? (<div className=\"card\">\r\n                            <p className=\"card-text\"> Seguro que quieres eliminar la pregunta?</p>\r\n                            <button type=\"button\" className=\"btn btn-danger\" onClick={handlerConfirmarEliminacion}>Si</button>\r\n                            <button type=\"button\" className=\"btn btn-lightr\" onClick={modalCerrado}>No</button>\r\n                        </div>)\r\n                        : esEliminarRespuesta\r\n                            ? (<div className=\"card\">\r\n                                <p className=\"card-text\"> Seguro que quieres eliminar la Respuesta?</p>\r\n                                <button type=\"button\" className=\"btn btn-danger\" onClick={handlerConfirmarEliminacion}>Si</button>\r\n                                <button type=\"button\" className=\"btn btn-lightr\" onClick={modalCerrado}>No</button>\r\n                            </div>)\r\n                            : (<>\r\n                                {\r\n                                    esPregunta\r\n                                        ? (preguntaActiva !== null)\r\n                                            ? <h1> Editar pregunta</h1>\r\n                                            : <h1> Nueva Pregunta</h1>\r\n                                        : (!!respuestaId)\r\n                                            ? <h1> Editar respuesta</h1>\r\n                                            : <h1> Nueva respuesta</h1>\r\n\r\n\r\n                                }\r\n                                <hr />\r\n                                <form className=\"container\" onSubmit={handlerSubmit}>\r\n                                    {\r\n                                        esPregunta &&\r\n                                        (<div className=\"form-group\">\r\n                                            <label>Pregunta</label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"Escribir toda la pregunta\"\r\n                                                name=\"pregunta\"\r\n                                                value={pregunta}\r\n                                                onChange={handleInputChange}\r\n                                                autoComplete=\"off\"\r\n\r\n                                            />\r\n                                            \r\n\r\n                                            <label>Escojer tematica</label>\r\n            \r\n                                            <select \r\n                                                className=\"form-control\" \r\n                                                onChange={handleInputChange}\r\n                                                value={tematica}\r\n                                                name='tematica'\r\n                                            >\r\n                                                {\r\n                                                    tematicas.map(tema=>(\r\n                                                        \r\n                                                        <option key={tema.id} value={tema.id}  >{tema.tematica}</option>\r\n\r\n                                                    ))\r\n                                                }\r\n                                                \r\n                                            </select>\r\n\r\n\r\n\r\n                                            \r\n\r\n\r\n                                        </div>)\r\n\r\n                                    }\r\n                                    {\r\n                                        esPregunta\r\n                                            ? <hr />\r\n                                            : (\r\n                                                <div className=\"form-group\">\r\n                                                    <textarea\r\n                                                        type=\"text\"\r\n                                                        className=\"form-control\"\r\n                                                        placeholder=\"Respuesta\"\r\n                                                        rows=\"5\"\r\n                                                        name=\"respuesta\"\r\n                                                        value={respuesta}\r\n                                                        onChange={handleInputChange}\r\n                                                    ></textarea>\r\n                                                    <small id=\"emailHelp\" className=\"form-text text-muted\">Respuesta con sumo detalle</small>\r\n                                                </div>\r\n\r\n                                            )\r\n                                    }\r\n                                    <div className=\"d-flex justify-content-between\">\r\n                                        <button\r\n                                            type=\"submit\"\r\n                                            className=\"btn btn-outline-primary btn-block\"\r\n                                        >\r\n                                            Enviar\r\n                                        </button>\r\n\r\n                                        {/* <button\r\n                                            \r\n                                            className=\"btn btn-outline-primary \"\r\n                                            onClick={cancelarPosteo}\r\n                                        >\r\n                                        Cancelar\r\n                                        </button> */}\r\n\r\n                                    </div>\r\n                                </form>\r\n\r\n                            </>)\r\n                }\r\n\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { iniciarCargaPreguntas } from '../../accions/foroActions';\r\nimport {Navbar} from '../ui/Navbar';\r\nimport {Pregunta} from './Pregunta';\r\nimport {ModalForo} from './Modal';\r\n\r\nexport const ForoScreen = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(iniciarCargaPreguntas());\r\n\r\n    }, [dispatch])\r\n\r\n    const {preguntas} = useSelector(state => state.foro);\r\n    \r\n    return (\r\n        <>\r\n            <Navbar/>  \r\n            <div className=\"container\">\r\n                <h1>Foro</h1>\r\n            </div>\r\n            {\r\n                preguntas.map(pregu => (\r\n                    <Pregunta \r\n                        key={pregu.id}\r\n                        {...pregu}\r\n                    />\r\n\r\n                ))\r\n            \r\n            }\r\n            \r\n            <ModalForo />\r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { iniciarCargaPreguntasCriptomoneda} from '../../../accions/foroActions';\r\nimport {Navbar} from '../../ui/Navbar';\r\nimport {Pregunta} from '../Pregunta';\r\nimport {ModalForo} from '../Modal';\r\n\r\n\r\nexport const CriptomonedasScreen = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(iniciarCargaPreguntasCriptomoneda());\r\n\r\n    }, [dispatch])\r\n    const {preguntas} = useSelector(state => state.foro);\r\n    \r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            \r\n            <div className=\"container\"> \r\n\r\n            <h1>Criptomonedas</h1>\r\n            {\r\n                preguntas.map(pregu => (\r\n                    <Pregunta \r\n                        key={pregu.id}\r\n                        {...pregu}\r\n                    />\r\n\r\n                ))\r\n            \r\n            }\r\n            \r\n            <ModalForo />\r\n            \r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { iniciarCargaPreguntasDeporte } from '../../../accions/foroActions';\r\nimport {Navbar} from '../../ui/Navbar';\r\nimport {Pregunta} from '../Pregunta';\r\nimport {ModalForo} from '../Modal';\r\n\r\n\r\nexport const DeportesScreen = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(iniciarCargaPreguntasDeporte());\r\n\r\n    }, [dispatch])\r\n    const {preguntas} = useSelector(state => state.foro);\r\n    \r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            \r\n            <div className=\"container\"> \r\n\r\n            <h1>Deportes</h1>\r\n            {\r\n                preguntas.map(pregu => (\r\n                    <Pregunta \r\n                        key={pregu.id}\r\n                        {...pregu}\r\n                    />\r\n\r\n                ))\r\n            \r\n            }\r\n            \r\n            <ModalForo />\r\n            \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { iniciarCargaPreguntasFotografia } from '../../../accions/foroActions';\r\nimport {Navbar} from '../../ui/Navbar';\r\nimport {Pregunta} from '../Pregunta';\r\nimport {ModalForo} from '../Modal';\r\n\r\n\r\nexport const FotografiaScreen = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(iniciarCargaPreguntasFotografia());\r\n\r\n    }, [dispatch])\r\n    const {preguntas} = useSelector(state => state.foro);\r\n    \r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            \r\n            <div className=\"container\"> \r\n\r\n            <h1>Fotografia</h1>\r\n            {\r\n                preguntas.map(pregu => (\r\n                    <Pregunta \r\n                        key={pregu.id}\r\n                        {...pregu}\r\n                    />\r\n\r\n                ))\r\n            \r\n            }\r\n            \r\n            <ModalForo />\r\n            \r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {iniciarCargaPreguntasNode } from '../../../accions/foroActions';\r\nimport {Navbar} from '../../ui/Navbar';\r\nimport {Pregunta} from '../Pregunta';\r\nimport {ModalForo} from '../Modal';\r\n\r\n\r\nexport const NodeScreen = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(iniciarCargaPreguntasNode());\r\n\r\n    }, [dispatch])\r\n    const {preguntas} = useSelector(state => state.foro);\r\n    \r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            \r\n            <div className=\"container\"> \r\n\r\n            <h1>Node</h1>\r\n            {\r\n                preguntas.map(pregu => (\r\n                    <Pregunta \r\n                        key={pregu.id}\r\n                        {...pregu}\r\n                    />\r\n\r\n                ))\r\n            \r\n            }\r\n            \r\n            <ModalForo />\r\n            \r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { iniciarCargaPreguntasReact } from '../../../accions/foroActions';\r\nimport {Navbar} from '../../ui/Navbar';\r\nimport {Pregunta} from '../Pregunta';\r\nimport {ModalForo} from '../Modal';\r\n\r\n\r\nexport const ReactScreen = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(iniciarCargaPreguntasReact());\r\n\r\n    }, [dispatch])\r\n    const {preguntas} = useSelector(state => state.foro);\r\n    \r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            \r\n            <div className=\"container\"> \r\n\r\n            <h1>React</h1>\r\n            {\r\n                preguntas.map(pregu => (\r\n                    <Pregunta \r\n                        key={pregu.id}\r\n                        {...pregu}\r\n                    />\r\n\r\n                ))\r\n            \r\n            }\r\n            \r\n            <ModalForo />\r\n            \r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { iniciarCargaPreguntasTecnologia } from '../../../accions/foroActions';\r\nimport {Navbar} from '../../ui/Navbar';\r\nimport {Pregunta} from '../Pregunta';\r\nimport {ModalForo} from '../Modal';\r\n\r\n\r\nexport const TecnologiaScreen = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(iniciarCargaPreguntasTecnologia());\r\n\r\n    }, [dispatch])\r\n    const {preguntas} = useSelector(state => state.foro);\r\n    \r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            \r\n            <div className=\"container\"> \r\n\r\n            <h1>Tecnologia</h1>\r\n            {\r\n                preguntas.map(pregu => (\r\n                    <Pregunta \r\n                        key={pregu.id}\r\n                        {...pregu}\r\n                    />\r\n\r\n                ))\r\n            \r\n            }\r\n            \r\n            <ModalForo />\r\n            \r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {iniciarCargaPreguntasRandom } from '../../../accions/foroActions';\r\nimport {Navbar} from '../../ui/Navbar';\r\nimport {Pregunta} from '../Pregunta';\r\nimport {ModalForo} from '../Modal';\r\n\r\n\r\nexport const RandomScreen = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(iniciarCargaPreguntasRandom());\r\n\r\n    }, [dispatch])\r\n    const {preguntas} = useSelector(state => state.foro);\r\n    \r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            \r\n            <div className=\"container\"> \r\n\r\n            <h1>Random</h1>\r\n            {\r\n                preguntas.map(pregu => (\r\n                    <Pregunta \r\n                        key={pregu.id}\r\n                        {...pregu}\r\n                    />\r\n\r\n                ))\r\n            \r\n            }\r\n            \r\n            <ModalForo />\r\n            \r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport { startChecking } from '../accions/authActions';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\n//import { ForoScreen } from '../components/foro/ForoScreen';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { PrivateRoute} from './PrivateRoute';\r\n\r\nimport { ForoScreen } from '../components/foro/ForoScreen';\r\nimport { CriptomonedasScreen } from '../components/foro/tematicas/CriptomonedasScreen';\r\nimport { DeportesScreen } from '../components/foro/tematicas/DeportesScreen';\r\nimport { FotografiaScreen } from '../components/foro/tematicas/FotografiaScreen';\r\nimport { NodeScreen } from '../components/foro/tematicas/NodeScreen';\r\nimport { ReactScreen } from '../components/foro/tematicas/ReactScreen';\r\nimport { TecnologiaScreen } from '../components/foro/tematicas/TecnologiaScreen';\r\nimport { RandomScreen } from '../components/foro/tematicas/RandomScreen';\r\nexport const AppRouter = () => {\r\n\r\n\r\n    const dispatch = useDispatch();\r\n    const {checking, uid} = useSelector(state => state.auth);\r\n    \r\n    //una vez cargue la pagina se hace este efecto secundario de iniciar el chequeo\r\n    useEffect(() => {\r\n        dispatch(startChecking());\r\n        \r\n    }, [dispatch]);\r\n\r\n\r\n\r\n    //Si es true, es por que el usuario aun no esta verificado, si es false le dejara ver lo que el usuario desea\r\n    if(checking){\r\n        return (<h5>Espere....</h5>);\r\n    }\r\n\r\n\r\n    \r\n    return (\r\n        <Router>\r\n            \r\n            <div>\r\n                <Switch>\r\n                    \r\n                    <PublicRoute \r\n                        exact \r\n                        path=\"/login\" \r\n                        component={LoginScreen}\r\n                        isAuthenticated={!!uid}    \r\n                    />\r\n                    <PrivateRoute \r\n                        exact \r\n                        path=\"/\" \r\n                        component={ForoScreen}\r\n                        isAuthenticated={!!uid}    \r\n\r\n                    />\r\n                    \r\n                    <PrivateRoute\r\n                        \r\n                        path=\"/Deportes\"\r\n                        component={DeportesScreen}\r\n                        isAuthenticated={!!uid}\r\n\r\n                    />\r\n                    <PrivateRoute\r\n                        exact\r\n                        path=\"/Fotografia\"\r\n                        component={FotografiaScreen}\r\n                        isAuthenticated={!!uid}\r\n\r\n                    />\r\n                    <PrivateRoute\r\n                        exact\r\n                        path=\"/Tecnolog√≠a\"\r\n                        component={TecnologiaScreen}\r\n                        isAuthenticated={!!uid}\r\n\r\n                    />\r\n                    <PrivateRoute\r\n                        exact\r\n                        path=\"/Criptomonedas\"\r\n                        component={CriptomonedasScreen}\r\n                        isAuthenticated={!!uid}\r\n\r\n                    />\r\n                    <PrivateRoute\r\n                        exact\r\n                        path=\"/NodeJs\"\r\n                        component={NodeScreen}\r\n                        isAuthenticated={!!uid}\r\n\r\n                    />\r\n                    <PrivateRoute\r\n                        exact\r\n                        path=\"/ReactJs\"\r\n                        component={ReactScreen}\r\n                        isAuthenticated={!!uid}\r\n\r\n                    />\r\n                    <PrivateRoute\r\n                        exact\r\n                        path=\"/Random\"\r\n                        component={RandomScreen}\r\n                        isAuthenticated={!!uid}\r\n\r\n                    />\r\n\r\n                    <Redirect to=\"/\"/>\r\n                </Switch>\r\n\r\n            </div>\r\n      \r\n        </Router >\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {Provider} from 'react-redux'\r\nimport { store } from './store/store';\r\nimport {AppRouter} from './routers/AppRouter';\r\n\r\n\r\n\r\nexport const ForoApp = () => {\r\n\r\n    \r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter/>\r\n\r\n        </Provider>\r\n        \r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {ForoApp} from './ForoApp';\n\n\nReactDOM.render(<ForoApp />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}