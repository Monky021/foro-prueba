{"version":3,"sources":["types/types.js","reducer/authReducer.js","reducer/foroReducer.js","reducer/uiReducer.js","reducer/rootReducer.js","store/store.js","helpers/fetch.js","accions/authActions.js","hooks/useForm.js","components/auth/LoginScreen.js","accions/foroActions.js","accions/uiActions.js","components/ui/Nabvar.js","components/foro/Respuesta.js","components/foro/Pregunta.js","components/foro/Modal.js","components/foro/ForoScreen.js","routers/PublicRoute.js","routers/PrivateRoute.js","routers/AppRouter.js","ForoApp.js","index.js"],"names":["types","initialState","checking","preguntas","preguntaActiva","respuestaId","esPregunta","esRespuesta","esEditPregunta","esEditRespuesta","esEliminarPregunta","EsEliminarRespuesta","modalAbierto","rootReducer","combineReducers","ui","state","action","type","auth","payload","foro","map","pre","id","filter","esEliminarRespuesta","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseUrl","fetchSinToken","endpoint","data","method","url","console","log","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","login","usuario","checkingFinish","logout","useForm","useState","form","setForm","reset","handleInputChange","target","name","value","LoginScreen","dispatch","useDispatch","nombre","password","password2","formRegistro","handleRegistroInput","formLogin","handleLoginInput","nombreL","passwordL","className","onSubmit","e","preventDefault","Swal","fire","trim","length","a","resp","json","ok","msg","startRegistro","onChange","htmlFor","dataValues","setItem","uid","startLogin","cargaPreguntas","abrirModelPregunta","cerrarModelPregunta","a√±adirPRegunta","pregunta","idRespuesta","limpiarIdRespuesta","limpiarEsEliminarRespuesta","preguntaId","preguntaActualizada","limpiarModalEliminar","eliminarPregunta","abrirModal","cerrarModal","Nabvar","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","onClick","clear","Respuesta","respuesta","Pregunta","respuestas","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","ModalForo","useSelector","modalCerrado","handlerConfirmarEliminacion","getState","resp2","body2","isOpen","onRequestClose","style","closeTimeoutMS","iniciarActualizarPregunta","usuarioId","pregun","hacerPreguntas","idRes","idPre","actualizarRespuesta","hacerRespuesta","placeholder","autoComplete","rows","ForoScreen","useEffect","pregu","PublicRoute","isAuthenticated","Component","component","rest","props","to","PrivateRoute","AppRouter","exact","path","ForoApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.711df929.chunk.js","sourcesContent":["\r\nexport const types = {\r\n\r\n    authChecking: '[auth] Revisando el estado del inicio de sesion',\r\n    authCheckingFinish: '[auth] Revision del estado del inicio de sesion finalizo',\r\n    authStartLogin: '[auth] inicio del login',\r\n    authLogin: '[auth] login',\r\n    authStartRegistro: '[auth] inicio del Registro',\r\n    authStartTokenRenew: '[auth] obtener nuevo token',\r\n    authlogout: '[auth] salir de la app',\r\n\r\n    preguntasCargar: '[preguntas] Cargar preguntas',\r\n    PreguntasCargadas: '[preguntas] Poner las preguntas en el store',\r\n    hacerPregunta: '[preguntas] postear preguntas' ,\r\n    a√±adirNuevaPregunta: '[Preguntas] a√±ade una nueva pregunta al store',\r\n    preguntaActiva: '[pregunta] poner pregunta activa',\r\n    limparPreguntaActiva: '[pregunta] limpiare la pregunta seleccionada',\r\n    preguntaActualizada: '[pregunta] actualiza la pregunta',\r\n    eliminarPregunta:'[pregunta] eliminar pregunta',\r\n\r\n    idRespuesta:'[respuesta] poner el id de la respuesta en el store ',\r\n    limpiarIdRespuesta: '[respuesta] limpiar el id de la respuesta',\r\n    actualizarRespuesta: '[Respuesta] se actualiza la respuesta en el store',\r\n    eliminarRespuesta: '[respuesta] eliminar la respuesta',\r\n    esEliminarRespuesta: '[respuesta] seleccionar isEliminarRespuesta',\r\n    limpiarEsEliminarRespuesta: '[respuesta] limpiar selecion eliminar la respuesta',\r\n\r\n    modalAbierto: '[ui] el modal se abre',\r\n    modalCerrado: '[ui] el modal se cierra',\r\n    modalAbiertoPreguntas: '[ui] el modal se abre para hacer preguntas',\r\n    modalCerradoPreguntas: '[ui] el modal se cierra y pone en false las preuntas',\r\n    modalAbiertoEditarPregunta: '[ui] el modal se abre para editar pregunta',\r\n    modalAbiertoEliminarPregunta: '[ui] el modal se abre para confirmar la eliminacion de la pregunta',\r\n    modalCerradoEliminarPregunta: '[ui] cambia el estado de eliminar en el store'\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\n//Estado inicial del reducer\r\nconst initialState = {\r\n    checking: true,\r\n    \r\n}\r\nexport const authReducer = (state= initialState, action) => {\r\n    switch (action.type) {\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking:false\r\n            }\r\n            \r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                checking:false\r\n            }\r\n\r\n        case types.authlogout:\r\n            return {\r\n                checking: false\r\n            }\r\n           \r\n            \r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    preguntas: [],\r\n    preguntaActiva: null,\r\n    respuestaId:null,\r\n    esPregunta:false,\r\n    esRespuesta: false,\r\n    esEditPregunta: false,\r\n    esEditRespuesta:false,\r\n    esEliminarPregunta:false,\r\n    EsEliminarRespuesta:false\r\n}\r\n\r\nexport const foroReducer = (state= initialState, action) => {\r\n    switch (action.type) {\r\n        case types.PreguntasCargadas:\r\n            return {\r\n                ...state,\r\n                preguntas: [...action.payload]\r\n            }\r\n        case types.modalAbiertoPreguntas:\r\n            return {\r\n                ...state,\r\n                esPregunta:true\r\n            }\r\n        case types.modalCerradoPreguntas:\r\n            return {\r\n                ...state,\r\n                esPregunta:false\r\n            }\r\n        case types.a√±adirNuevaPregunta:\r\n            return{\r\n                ...state,\r\n                preguntas:[\r\n                    ...state.preguntas,\r\n                    action.payload\r\n                ]\r\n            }\r\n        case types.preguntaActiva:\r\n            return {\r\n                ...state,\r\n                preguntaActiva: action.payload\r\n            }\r\n\r\n        case types.limparPreguntaActiva:\r\n            return {\r\n                ...state,\r\n                preguntaActiva: null\r\n            }\r\n        case types.modalAbiertoEditarPregunta:\r\n            return {\r\n                ...state\r\n            }\r\n        case types.modalAbiertoEliminarPregunta:\r\n            return{\r\n                ...state,\r\n                esEliminarPregunta: true\r\n            }\r\n        case types.modalCerradoEliminarPregunta:\r\n            return {\r\n                ...state,\r\n                esEliminarPregunta: false\r\n            }\r\n        case types.preguntaActualizada:\r\n            return {\r\n                ...state,\r\n                preguntas: state.preguntas.map(\r\n                    pre => (pre.id===action.payload.id) ? action.payload: pre\r\n                )\r\n            }\r\n        case types.eliminarPregunta:\r\n            return {\r\n                ...state,\r\n                preguntas: state.preguntas.filter(\r\n                    pre => (pre.id!==state.preguntaActiva)\r\n                ),\r\n                preguntaActiva:null\r\n            }\r\n        case types.idRespuesta:\r\n            return {\r\n                ...state,\r\n                respuestaId: action.payload\r\n            }\r\n        case types.limpiarIdRespuesta:\r\n            return {\r\n                ...state,\r\n                respuestaId: null\r\n            }\r\n        case types.esEliminarRespuesta:\r\n            return{\r\n                ...state,\r\n                esEliminarRespuesta:true\r\n            }\r\n        case types.limpiarEsEliminarRespuesta:\r\n            return {\r\n                ...state,\r\n                esEliminarRespuesta:false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modalAbierto: false\r\n}\r\n\r\nexport const uiReducer = (state=initialState, action)=>{\r\n\r\n    switch (action.type) {\r\n        case types.modalAbierto:\r\n            return {\r\n                ...state,\r\n                modalAbierto:true\r\n            }\r\n\r\n        case types.modalCerrado:\r\n            return {\r\n                ...state,\r\n                modalAbierto:false\r\n            }\r\n        \r\n            \r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","import {combineReducers} from 'redux';\r\nimport { authReducer } from './authReducer';\r\nimport { foroReducer } from './foroReducer';\r\nimport {uiReducer} from './uiReducer'\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui:uiReducer,\r\n    auth: authReducer,\r\n    foro: foroReducer\r\n})","import { applyMiddleware, compose, createStore } from \"redux\";\r\nimport thunk from 'redux-thunk';\r\nimport { rootReducer } from \"../reducer/rootReducer\";\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n);","const baseUrl = 'http://localhost:4040/api/foro';\r\n\r\n//Se encarga de formar el url junto al tipo de posteo y envia la data correspondiente sim solucitar el token\r\nexport const fetchSinToken = ( endpoint, data, method = 'GET') => {\r\n    const url = `${baseUrl}/${endpoint}`;\r\n    console.log(url);\r\n    if(method === 'GET'){\r\n        return fetch(url);\r\n    }else {\r\n        return fetch(url,{\r\n            method,\r\n            headers:{\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n\r\n    }\r\n\r\n}\r\n\r\n//Se encarga de hacer peticiones teniendo en cuenta el token \r\nexport const fetchConToken = ( endpoint, data, method = 'GET') => {\r\n    const url = `${baseUrl}/${endpoint}`;\r\n    const token = localStorage.getItem('token') || '';\r\n    \r\n    if(method === 'GET'){\r\n        return fetch(url,{\r\n            method,\r\n            headers:{\r\n                'x-token':token\r\n            }\r\n        });\r\n    }else {\r\n        return fetch(url,{\r\n            method,\r\n            headers:{\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n\r\n    }\r\n\r\n}","\r\nimport Swal from 'sweetalert2';\r\nimport {fetchConToken, fetchSinToken} from '../helpers/fetch';\r\nimport {types} from '../types/types'\r\n\r\n\r\n// Se hace el posteo para poder iniciar sesion con el nombre y la contrase√±a\r\nexport const startLogin = (nombre,password) => {\r\n\r\n    return async(dispatch) => {\r\n        // se hace la peticion sin token para iniciar sesion en el backend \r\n        const resp = await fetchSinToken('auth/login', {nombre, password}, 'POST');\r\n\r\n        const body = await resp.json();\r\n        //si la respuesta es true guarda el token y hace el logueo manteniendo la data en el store de redux\r\n        if(resp.ok){\r\n            const {data, token} = body;\r\n            const {dataValues} = data;\r\n            localStorage.setItem('token', token);\r\n            dispatch(login({uid: dataValues.id, nombre: dataValues.nombre}))\r\n            Swal.fire('Bienvenido','','success')\r\n        }else {\r\n            Swal.fire('Error', body.msg, 'error')\r\n        }\r\n    }\r\n}\r\n\r\n//accion que guarda el usuario en el store\r\nconst login = (usuario) => ({\r\n    type: types.authLogin,\r\n    payload: usuario\r\n})\r\n\r\n\r\n//Accion que hace el posteo para realizar el registro del nuevo usuario\r\nexport const startRegistro = (nombre, password) => {\r\n    return async(dispatch)=> {\r\n        //se hace la peticion sin token para el registro\r\n        const resp = await fetchSinToken('usuario', {nombre, password}, 'POST');\r\n        const body = await resp.json();\r\n        \r\n        //si la respuesta es true saldra una alerta de confirmado pero no iniciara sesion\r\n        if(resp.ok){\r\n            return Swal.fire('Buen trabajo', 'Tu cuenta fue creada, solo te falta iniciar sesion', 'success')\r\n        }else{\r\n            return Swal.fire('Ups...', body.msg, 'error');\r\n        }\r\n    }\r\n}\r\n\r\n//Accion que incia el chequeo del usuario\r\nexport const startChecking = () =>{\r\n    return async(dispatch)=>{\r\n        //se hace la peticion con el token para verificar si es un usuario valido y regresa un nuevo token\r\n        const resp = await fetchConToken('auth/renew' );\r\n        const body = await resp.json();\r\n        \r\n        //si la respuesta es true guarda el token nuevo en el localStorage y mantiene la sesion activa\r\n        if(resp.ok){\r\n            \r\n            localStorage.setItem('token', body.token);\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                nombre: body.nombre\r\n            }));\r\n\r\n        }else {\r\n            dispatch(checkingFinish());\r\n        }\r\n    }\r\n}\r\n\r\n\r\n//finaliza el chequeo del usuario\r\nconst checkingFinish = () => ({\r\n    type: types.authCheckingFinish\r\n})\r\n\r\n\r\n//Realizar el logout\r\nexport const inicioSalirForo = () => {\r\n    return (dispatch)=> {\r\n        localStorage.clear();\r\n\r\n        dispatch(logout())\r\n        Swal.fire(':)', 'Esperamos volverlo a ver pronto', 'info')\r\n    }\r\n}\r\n\r\n//logout\r\nconst logout = () =>({type:types.authlogout})","import { useState } from \"react\"\r\n\r\n//Custom hook para capturar los datos del formulario\r\nexport const useForm = (initialState= {}) => {\r\n\r\n    const [form, setForm] = useState(initialState)\r\n\r\n    const reset = () => {\r\n        setForm(initialState);\r\n    }\r\n\r\n    const handleInputChange = ({target}) => {\r\n        setForm({\r\n            ...form,\r\n            [target.name]: target.value\r\n        })\r\n    } \r\n    return [form, handleInputChange, reset]\r\n\r\n\r\n}","import React from 'react'\r\nimport {useDispatch} from 'react-redux';\r\nimport Swal from 'sweetalert2'\r\nimport { startLogin, startRegistro } from '../../accions/authActions';\r\nimport { useForm } from '../../hooks/useForm'\r\nimport './login.css'\r\nexport const LoginScreen = () => {\r\n\r\n    //Estado incial del formulario de registro\r\n    const initialFormRegistro = {\r\n        nombre: '',\r\n        password: '',\r\n        password2:''\r\n    }\r\n    //estado inicial del formulario de login\r\n    const initialFormLogin = {\r\n        nombre: '',\r\n        password: '',\r\n        \r\n    }\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [formRegistro, handleRegistroInput] = useForm(initialFormRegistro);\r\n    const [formLogin, handleLoginInput] = useForm(initialFormLogin);\r\n\r\n\r\n    const { nombre, password, password2 } = formRegistro;\r\n    const { nombre:nombreL, password:passwordL} = formLogin;\r\n\r\n    //funcion para capturar los eventos del formulario de registro, se validan los datos y se despachan\r\n    const handleSubmirRegistro = (e) => {\r\n        e.preventDefault();\r\n\r\n        \r\n        if(nombre === ''){\r\n            return Swal.fire('Error', 'El nickname es obligatorio', 'error')\r\n\r\n        }\r\n        if(nombre.trim().length <3){\r\n            return Swal.fire('Error', 'El nickname debe tener mas de 2 caracteres', 'error')\r\n\r\n        }\r\n        if(password !== password2){\r\n            return Swal.fire('Error', 'Las contrase√±as deben de coincidir', 'error')\r\n        }\r\n\r\n        dispatch(startRegistro(nombre, password));\r\n    }\r\n\r\n    //funcion para capturar los eventos del formulario de login, se validan los datos y se despachan\r\n    const handleSubmirLogin = (e) => {\r\n        e.preventDefault();\r\n        if(nombreL === '' ){\r\n            return Swal.fire('Error', 'El nombre es obligatorio', 'error')\r\n\r\n        }\r\n        if(passwordL.trim().length === 0){\r\n            return Swal.fire('Error', 'la contrase√±a es obligatoria', 'error')\r\n        }\r\n\r\n        dispatch(startLogin(nombreL, passwordL));\r\n    }\r\n    return (\r\n\r\n        <div>\r\n            <div className=\"container mt-60\">\r\n\r\n                <form onSubmit={handleSubmirRegistro}>\r\n                    <div className=\"form-group\">\r\n                        <label >Registrar su Nickname</label>\r\n                        <input type=\"text\" className=\"form-control\" name=\"nombre\" value={nombre} onChange={handleRegistroInput} />\r\n                        <small id=\"emailHelp\" className=\"form-text text-muted\">Su nickname debe ser unico en el foro para poder ingresar</small>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"exampleInputPassword1\">Contrase√±a</label>\r\n                        <input type=\"password\" className=\"form-control\" name=\"password\" value={password} onChange={handleRegistroInput}  />\r\n                        <small id=\"emailHelp\" className=\"form-text text-muted\">La contrase√±a debe ser minimo de 6 digitos</small>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"exampleInputPassword1\">Confirmar contrase√±a</label>\r\n                        <input type=\"password\" className=\"form-control\" name=\"password2\" value={password2} onChange={handleRegistroInput} />\r\n                    </div>\r\n\r\n                    <button type=\"submit\" className=\"btn btn-primary\">Registrar</button>\r\n                </form>\r\n            </div>\r\n\r\n            <hr />\r\n            <div className=\"container mt-60\">\r\n\r\n                <form onSubmit={handleSubmirLogin}>\r\n                    <div className=\"form-group\">\r\n                        <label >Nickname</label>\r\n                        <input type=\"text\" className=\"form-control\" name=\"nombre\" value={nombreL} onChange={handleLoginInput} />\r\n                        <small id=\"emailHelp\" className=\"form-text text-muted\">Su nickname debe ser unico en el foro para poder ingresar</small>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"exampleInputPassword1\">Contrase√±a</label>\r\n                        <input type=\"password\" className=\"form-control\" name=\"password\" value={passwordL} onChange={handleLoginInput}  />\r\n                        <small id=\"emailHelp\" className=\"form-text text-muted\">La contrase√±a debe ser minimo de 6 digitos</small>\r\n                    </div>\r\n                    \r\n\r\n                    <button type=\"submit\" className=\"btn btn-primary\">Entrar al foro</button>\r\n                </form>\r\n            </div>\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n","import Swal from \"sweetalert2\";\r\nimport { fetchConToken } from \"../helpers/fetch\"\r\nimport { types } from \"../types/types\";\r\n\r\n//Accion para hacer la peticion al backend de las preguntas\r\nexport const iniciarCargaPreguntas = () => {\r\n\r\n    return async (dispatch) => {\r\n        try {\r\n            //se valida el token y se hace el get al endpoint para obtener las preguntas\r\n            const resp = await fetchConToken('pregunta');\r\n            const body = await resp.json();\r\n            const { preguntas } = body;\r\n            \r\n            //si la respuesta es true se hace una carga de las preguntas al store\r\n            if (resp.ok) {\r\n                dispatch(cargaPreguntas(preguntas))\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n}\r\n\r\n//accion para cargar las preguntas al store\r\nconst cargaPreguntas = (preguntas) => ({\r\n    type: types.PreguntasCargadas,\r\n    payload: preguntas\r\n})\r\n\r\n\r\nexport const abrirModelPregunta = () => ({ type: types.modalAbiertoPreguntas })\r\nexport const cerrarModelPregunta = () => ({ type: types.modalCerradoPreguntas })\r\n\r\n\r\n//A√±ade la nueva pregunta al store\r\nconst a√±adirPRegunta = (pregunta) => ({\r\n    type: types.a√±adirNuevaPregunta,\r\n    payload: pregunta\r\n})\r\n\r\n//accion para crear las preguntas\r\nexport const hacerPreguntas = (pregunta, usuarioId) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const resp = await fetchConToken('pregunta', { pregunta, usuarioId }, 'POST');\r\n            const body = await resp.json();\r\n            const { pregunta: pregun } = body;\r\n            \r\n            if (resp.ok) {\r\n                dispatch(a√±adirPRegunta(pregun))\r\n                Swal.fire('Listo', 'La pregunta se creo satisfactoriamente', 'success')\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n//Crear respuesta\r\n\r\nexport const hacerRespuesta = (respuesta, preguntaId) => {\r\n\r\n    return async(dispatch)=> {\r\n        try {\r\n            const resp = await fetchConToken('respuesta', {respuesta, preguntaId}, 'POST');\r\n            \r\n            if(resp.ok){\r\n                //cargar preguntas\r\n                const resp2 = await fetchConToken('pregunta');\r\n                const body2 = await resp2.json();\r\n                const { preguntas } = body2;\r\n                dispatch(cargaPreguntas(preguntas))\r\n                Swal.fire('Listo', 'La respuesta se creo satisfactoriamente', 'success');\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n//Seleccionar el id de la respuesta en el store\r\nexport const idRespuesta = (id) => ({\r\n    type: types.idRespuesta,\r\n    payload: id\r\n})\r\n//limpiar el id de la respuesta del store\r\nexport const limpiarIdRespuesta = () => ({\r\n    type: types.limpiarIdRespuesta\r\n})\r\n\r\n\r\n//Actualizar respuesta \r\n\r\n export const actualizarRespuesta = (respuesta, idRes, idPre) => {\r\n     return async(dispatch)=> {\r\n         try {\r\n             const resp = await fetchConToken(`respuesta/${idRes}`, {respuesta, idPre}, 'PUT');\r\n             \r\n             if(resp.ok){\r\n                const resp2 = await fetchConToken('pregunta');\r\n                const body2 = await resp2.json();\r\n                const { preguntas } = body2;\r\n                dispatch(cargaPreguntas(preguntas))\r\n                Swal.fire('Listo', 'La respuesta se actualizo satisfactoriamente', 'success');\r\n\r\n            }\r\n         } catch (error) {\r\n             \r\n         }\r\n     }\r\n }\r\n\r\n\r\n//selecionar esEliminar respuesta\r\nexport const esEliminarRespuesta = ()=> ({\r\n    type:types.esEliminarRespuesta\r\n})\r\nexport const limpiarEsEliminarRespuesta = ()=> ({\r\n    type:types.limpiarEsEliminarRespuesta\r\n})\r\n\r\n//Eliminar respuesta de la base de datos\r\nexport const eliminarRespuesta = (id) =>{\r\n\r\n    return async(dispatch) => {\r\n        \r\n        try {\r\n            const resp = await fetchConToken(`respuesta/${id}`, {}, 'DELETE');\r\n            const {msg} = await resp.json();\r\n            if (resp.ok) {\r\n                const resp2 = await fetchConToken('pregunta');\r\n                const body2 = await resp2.json();\r\n                const { preguntas } = body2;\r\n                dispatch(cargaPreguntas(preguntas))\r\n                Swal.fire('Listo', msg, 'success');\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\n// Selecciona el id de la pregunta en el store\r\nexport const preguntaActiva = (preguntaId) => ({\r\n    type: types.preguntaActiva,\r\n    payload: preguntaId\r\n})\r\n//limpia el id de la pregunta de la store\r\nexport const limpiarPreguntaActiva = () => ({type: types.limparPreguntaActiva})\r\n\r\n\r\n\r\n//Actualizar pregunta\r\nconst preguntaActualizada = (pregunta) =>({\r\n    type: types.preguntaActualizada,\r\n    payload:pregunta\r\n}) \r\n\r\n\r\nexport const iniciarActualizarPregunta = (id, pregunta) => {\r\n    return async(dispatch)=> {\r\n\r\n        try {\r\n\r\n            const resp = await fetchConToken(`pregunta/${id}`, {pregunta}, 'PUT')\r\n            const body = await resp.json();\r\n            \r\n            if (resp.ok) {\r\n                dispatch(preguntaActualizada(body));\r\n                Swal.fire('Listo', 'La pregunta se actualizo satisfactoriamente', 'success')\r\n\r\n                \r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport const abrirModalEditarPegunta = () =>({\r\n    type:types.modalAbiertoEditarPregunta\r\n})\r\n\r\n\r\n//Eliminar pregunta\r\n\r\nexport const abrirModalEliminar = () => ({\r\n    type: types.modalAbiertoEliminarPregunta\r\n})\r\n\r\nexport const limpiarModalEliminar = () => ({\r\n    type: types.modalCerradoEliminarPregunta\r\n})\r\n\r\nexport const iniciarEliminarPregunta = () => {\r\n    return async(dispatch, getState)=> {\r\n        const id = getState().foro.preguntaActiva;\r\n        try {\r\n            const resp = await fetchConToken(`pregunta/${id}`, {} ,'DELETE');\r\n            \r\n            const {msg} = resp.json();\r\n            if(resp.ok){\r\n                dispatch(eliminarPregunta())\r\n                Swal.fire('Listo', msg, 'success');\r\n            }\r\n        } catch (error) {\r\n\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst eliminarPregunta = () => ({\r\n    type: types.eliminarPregunta\r\n})","import { types } from \"../types/types\"\r\n\r\n\r\n\r\n//Accion para abrir el modal\r\nexport const abrirModal = () => ({\r\n    type: types.modalAbierto\r\n})\r\n//accion para cerrar el modal\r\nexport const cerrarModal = () => ({\r\n    type: types.modalCerrado\r\n})","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { inicioSalirForo } from '../../accions/authActions';\r\nimport { abrirModelPregunta } from '../../accions/foroActions';\r\nimport { abrirModal } from '../../accions/uiActions';\r\n\r\nexport const Nabvar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    // abre el modal y crea la pregunta nueva\r\n    const handleOnClickPregunta = () => {\r\n        \r\n\r\n        dispatch(abrirModal())\r\n        dispatch(abrirModelPregunta())\r\n    }\r\n    const habdelonClickSalir = () => {\r\n        dispatch(inicioSalirForo())\r\n    }\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light \">\r\n            <a className=\"navbar-brand\" href=\"/\">NuestroForo</a>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n                <div className=\"navbar-nav \">\r\n                    \r\n                    <button className=\"btn btn-outline-primary\" onClick={handleOnClickPregunta}> Hacer una pregunta</button>\r\n                    \r\n                </div>\r\n                <div className=\"navbar-nav ml-auto\">\r\n\r\n                    <button className=\" btn btn-outline-danger\" onClick={habdelonClickSalir} > Salir </button>\r\n                    \r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { esEliminarRespuesta, idRespuesta } from '../../accions/foroActions';\r\nimport { abrirModal } from '../../accions/uiActions';\r\nimport './css.css';\r\n\r\nexport const Respuesta = ({id, respuesta}) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handlerOnClickEditarRespuesta = () => {\r\n        dispatch(abrirModal())\r\n\r\n        dispatch(idRespuesta(id))\r\n        \r\n    }\r\n    const handlerOnClickEliminarRespuesta = () => {\r\n        dispatch(idRespuesta(id))\r\n        dispatch(esEliminarRespuesta())\r\n        dispatch(abrirModal())\r\n    }\r\n\r\n    return (\r\n        <div className=\"card\" >\r\n            <div className=\"card-body\">\r\n                \r\n                <p className=\"card-text\">{respuesta}</p>\r\n                <button className=\"btn btn-primary margin-all\"  onClick={handlerOnClickEditarRespuesta}> Editar respuesta </button>\r\n                <button className=\"btn btn-outline-danger margin-all\"  onClick={handlerOnClickEliminarRespuesta}> Eliminar respuesta </button>\r\n\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { abrirModalEliminar, abrirModelPregunta, preguntaActiva } from '../../accions/foroActions';\r\nimport {Respuesta} from './Respuesta'\r\nimport { abrirModal } from '../../accions/uiActions';\r\nimport './css.css';\r\n\r\nexport const Pregunta = ({id, pregunta = '', respuestas=[]}) => {\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const handlerOnClickRespuesta = () => {\r\n        dispatch(abrirModal())\r\n        dispatch(preguntaActiva(id))\r\n\r\n        \r\n    }\r\n    const handlerOnClickEditarPregunta = () => {\r\n\r\n        dispatch(abrirModal())\r\n        dispatch(abrirModelPregunta())\r\n        dispatch(preguntaActiva(id))\r\n        \r\n    }\r\n    const handlerOnClickEliminarPregunta = () => {\r\n        dispatch(abrirModal())\r\n        dispatch(abrirModalEliminar())\r\n        dispatch(preguntaActiva(id))\r\n\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"card\" >\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">{pregunta}</h5>\r\n                    <h6 className=\"card-subtitle mb-2 text-muted\">Respuestas</h6>\r\n                    {\r\n                        respuestas.map((resp) =>( \r\n                        \r\n                            <Respuesta\r\n                                key={resp.id}\r\n                                {...resp}\r\n                            />    \r\n                        )\r\n                            \r\n\r\n                        \r\n                            \r\n                        )\r\n                        }\r\n                    {/* <a href=\"#\" className=\"card-link\">Another link</a> */}\r\n                    \r\n                    <button className=\"btn btn-primary margin-all\" onClick={handlerOnClickRespuesta}> Responder </button>\r\n                    <button className=\"btn btn-primary margin-all\" onClick={handlerOnClickEditarPregunta}> Editar pregunta </button>\r\n                    <button className=\"btn btn-outline-danger margin-all\" onClick={handlerOnClickEliminarPregunta}> Eliminar pregunta </button>\r\n\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Modal from 'react-modal';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport Swal from 'sweetalert2';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { cerrarModal } from '../../accions/uiActions';\r\nimport { actualizarRespuesta, cerrarModelPregunta, eliminarRespuesta, hacerPreguntas, hacerRespuesta, iniciarActualizarPregunta, iniciarEliminarPregunta, limpiarEsEliminarRespuesta, limpiarIdRespuesta, limpiarModalEliminar, limpiarPreguntaActiva } from '../../accions/foroActions';\r\nimport './css.css';\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n    },\r\n};\r\n\r\nModal.setAppElement('#root');\r\n\r\n\r\n\r\n\r\n\r\nexport const ModalForo = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { modalAbierto } = useSelector(state => state.ui);\r\n    const { esPregunta, preguntaActiva, esEliminarPregunta, respuestaId, esEliminarRespuesta } = useSelector(state => state.foro);\r\n    const { uid } = useSelector(state => state.auth);\r\n\r\n\r\n    const [form, handleInputChange, reset] = useForm({\r\n        pregunta: '',\r\n        respuesta: ''\r\n    });\r\n\r\n    const { pregunta, respuesta } = form;\r\n\r\n\r\n\r\n    const handlerSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (esPregunta) {\r\n            if (pregunta === '') {\r\n                return Swal.fire('Ups...', 'La pregunta es obligatoria', 'error')\r\n\r\n            }\r\n            if (!!preguntaActiva ) {\r\n                dispatch(iniciarActualizarPregunta(preguntaActiva, pregunta))\r\n            } else {\r\n                dispatch(hacerPreguntas(pregunta, uid));\r\n                reset();\r\n                dispatch(cerrarModal());\r\n                dispatch(cerrarModelPregunta());\r\n\r\n            }\r\n\r\n        } else {\r\n            if (respuesta === '') {\r\n\r\n                return Swal.fire('Ups...', 'La respuesta es obligatoria', 'error')\r\n            }\r\n            if (!!respuestaId) {\r\n                dispatch(actualizarRespuesta(respuesta, respuestaId, preguntaActiva))\r\n            }else{\r\n                \r\n\r\n                dispatch(hacerRespuesta(respuesta, preguntaActiva));\r\n            }\r\n        }\r\n        reset();\r\n        dispatch(cerrarModal());\r\n        dispatch(limpiarIdRespuesta())\r\n\r\n    }\r\n\r\n\r\n\r\n    const modalCerrado = () => {\r\n        reset();\r\n        dispatch(cerrarModal());\r\n        dispatch(limpiarEsEliminarRespuesta())\r\n        dispatch(cerrarModelPregunta());\r\n        dispatch(limpiarPreguntaActiva());\r\n        dispatch(limpiarModalEliminar());\r\n        dispatch(limpiarIdRespuesta());\r\n    }\r\n    // const cancelarPosteo = () => {\r\n    //     reset();\r\n    //     dispatch(cerrarModal());\r\n    //     dispatch(limpiarEsEliminarRespuesta())\r\n    //     dispatch(cerrarModelPregunta());\r\n    //     dispatch(limpiarPreguntaActiva());\r\n    //     dispatch(limpiarModalEliminar());\r\n    //     dispatch(limpiarIdRespuesta());\r\n    // }\r\n    const handlerConfirmarEliminacion = () => {\r\n        if (esEliminarPregunta) {\r\n            dispatch(iniciarEliminarPregunta());\r\n            dispatch(cerrarModal());\r\n            dispatch(limpiarModalEliminar());\r\n            \r\n        }\r\n        if (esEliminarRespuesta) {\r\n            dispatch(eliminarRespuesta(respuestaId));\r\n            dispatch(cerrarModal());\r\n            dispatch(limpiarEsEliminarRespuesta());\r\n\r\n\r\n        }\r\n\r\n\r\n    }\r\n    return (\r\n        <div>\r\n            <Modal\r\n                isOpen={modalAbierto}\r\n                // onAfterOpen={afterOpenModal}\r\n                onRequestClose={modalCerrado}\r\n                style={customStyles}\r\n                closeTimeoutMS={300}\r\n\r\n            >\r\n                {\r\n                    esEliminarPregunta\r\n                        ? (<div className=\"card\">\r\n                            <p className=\"card-text\"> Seguro que quieres eliminar la pregunta?</p>\r\n                            <button type=\"button\" className=\"btn btn-danger\" onClick={handlerConfirmarEliminacion}>Si</button>\r\n                            <button type=\"button\" className=\"btn btn-lightr\" onClick={modalCerrado}>No</button>\r\n                        </div>)\r\n                        : esEliminarRespuesta\r\n                            ? (<div className=\"card\">\r\n                                <p className=\"card-text\"> Seguro que quieres eliminar la Respuesta?</p>\r\n                                <button type=\"button\" className=\"btn btn-danger\" onClick={handlerConfirmarEliminacion}>Si</button>\r\n                                <button type=\"button\" className=\"btn btn-lightr\" onClick={modalCerrado}>No</button>\r\n                            </div>)\r\n                            : (<>\r\n                                {\r\n                                    esPregunta\r\n                                        ? (preguntaActiva !== null)\r\n                                            ? <h1> Editar pregunta</h1>\r\n                                            : <h1> Nueva Pregunta</h1>\r\n                                        : (!!respuestaId)\r\n                                            ? <h1> Editar respuesta</h1>\r\n                                            : <h1> Nueva respuesta</h1>\r\n\r\n\r\n                                }\r\n                                <hr />\r\n                                <form className=\"container\" onSubmit={handlerSubmit}>\r\n                                    {\r\n                                        esPregunta&&\r\n                                            (<div className=\"form-group\">\r\n                                                <label>Pregunta</label>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    placeholder=\"Escribir toda la pregunta\"\r\n                                                    name=\"pregunta\"\r\n                                                    value={pregunta}\r\n                                                    onChange={handleInputChange}\r\n                                                    autoComplete=\"off\"\r\n                                                    \r\n                                                />\r\n\r\n                                            </div>)\r\n                                            \r\n                                    }\r\n                                    {\r\n                                        esPregunta\r\n                                            ? <hr />\r\n                                            : (\r\n                                                <div className=\"form-group\">\r\n                                                    <textarea\r\n                                                        type=\"text\"\r\n                                                        className=\"form-control\"\r\n                                                        placeholder=\"Respuesta\"\r\n                                                        rows=\"5\"\r\n                                                        name=\"respuesta\"\r\n                                                        value={respuesta}\r\n                                                        onChange={handleInputChange}\r\n                                                    ></textarea>\r\n                                                    <small id=\"emailHelp\" className=\"form-text text-muted\">Respuesta con sumo detalle</small>\r\n                                                </div>\r\n\r\n                                            )\r\n                                    }\r\n                                    <div className=\"d-flex justify-content-between\">\r\n                                        <button\r\n                                            type=\"submit\"\r\n                                            className=\"btn btn-outline-primary btn-block\"\r\n                                        >\r\n                                        Enviar\r\n                                        </button>\r\n\r\n                                        {/* <button\r\n                                            \r\n                                            className=\"btn btn-outline-primary \"\r\n                                            onClick={cancelarPosteo}\r\n                                        >\r\n                                        Cancelar\r\n                                        </button> */}\r\n\r\n                                    </div>\r\n                                </form>\r\n\r\n                            </>)\r\n                }\r\n\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { iniciarCargaPreguntas } from '../../accions/foroActions';\r\nimport {Nabvar} from '../ui/Nabvar';\r\nimport {Pregunta} from './Pregunta';\r\nimport {ModalForo} from './Modal';\r\n\r\nexport const ForoScreen = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(iniciarCargaPreguntas());\r\n\r\n    }, [dispatch])\r\n\r\n    const {preguntas} = useSelector(state => state.foro)\r\n    \r\n    return (\r\n        <>\r\n            <Nabvar/>  \r\n\r\n            {\r\n                preguntas.map(pregu => (\r\n                    <Pregunta \r\n                        key={pregu.id}\r\n                        {...pregu}\r\n                    />\r\n\r\n                ))\r\n            \r\n            }\r\n            \r\n            <ModalForo />\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Redirect to=\"/\" /> )\n                    : ( <Component { ...props } /> )\n            )}\n        \n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/login\" /> )\n            )}\n        \n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport { startChecking } from '../accions/authActions';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { ForoScreen } from '../components/foro/ForoScreen';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { PrivateRoute} from './PrivateRoute';\r\n\r\nexport const AppRouter = () => {\r\n\r\n\r\n    const dispatch = useDispatch();\r\n    const {checking, uid} = useSelector(state => state.auth);\r\n    \r\n    //una vez cargue la pagina se hace este efecto secundario de iniciar el chequeo\r\n    useEffect(() => {\r\n        dispatch(startChecking());\r\n        \r\n    }, [dispatch]);\r\n\r\n\r\n\r\n    //Si es true, es por que el usuario aun no esta verificado, si es false le dejara ver lo que el usuario desea\r\n    if(checking){\r\n        return (<h5>Espere....</h5>);\r\n    }\r\n\r\n\r\n    \r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    \r\n                    <PublicRoute \r\n                        exact \r\n                        path=\"/login\" \r\n                        component={LoginScreen}\r\n                        isAuthenticated={!!uid}    \r\n                    />\r\n                    <PrivateRoute \r\n                        exact \r\n                        path=\"/\" \r\n                        component={ForoScreen}\r\n                        isAuthenticated={!!uid}    \r\n\r\n                    />\r\n\r\n                    <Redirect to=\"/\"/>\r\n                </Switch>\r\n\r\n            </div>\r\n      \r\n        </Router >\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {Provider} from 'react-redux'\r\nimport { store } from './store/store';\r\nimport {AppRouter} from './routers/AppRouter';\r\n\r\n\r\n\r\nexport const ForoApp = () => {\r\n\r\n    \r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter/>\r\n\r\n        </Provider>\r\n        \r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {ForoApp} from './ForoApp';\n\n\nReactDOM.render(<ForoApp />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}